<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- like.xml -->
<!--
 * 'comment_like_tbl' 테이블과 관련된 쿼리들을 담은 매퍼입니다.
 * @author Dita (@com.dita)
 * @since 2023. 11. 28.
 * @version 1.0.0
 -->
<mapper namespace="com.dita.metapilot.comment.repository.CommentRepository">

    <!-- Create a like -->
    <!--
     * 'comment_like_tbl' 테이블에 좋아요를 추가하는 쿼리입니다.
     * @param comment_tbl_id 좋아요를 누른 댓글의 ID
     * @param user_tbl_id 좋아요를 누른 사용자의 ID
     * @since 2023. 11. 28.
     * @version 1.0.0
     -->
    <insert id="createLike" parameterType="com.dita.metapilot.comment.dto.LikeDto">
        INSERT INTO comment_like_tbl(comment_tbl_id, user_tbl_id)
        VALUES (#{commentId}, #{userId})
    </insert>

    <!-- Revoke a like -->
    <!--
     * 'comment_like_tbl' 테이블에서 좋아요를 취소하는 쿼리입니다.
     * @param comment_tbl_id 좋아요를 취소할 댓글의 ID
     * @param user_tbl_id 좋아요를 취소하는 사용자의 ID
     * @since 2023. 11. 28.
     * @version 1.0.0
     -->
    <delete id="revokeLike" parameterType="com.dita.metapilot.comment.dto.LikeDto">
        DELETE FROM comment_like_tbl
        WHERE comment_tbl_id = #{commentId} AND user_tbl_id = #{userId}
    </delete>

    <!-- Check if a like exists -->
    <!--
     * 특정 댓글에 대한 좋아요 여부를 확인하는 쿼리입니다.
     * @param comment_tbl_id 댓글의 ID
     * @param user_tbl_id 사용자의 ID
     * @return 해당 댓글에 대한 좋아요 여부 (true or false)
     * @since 2023. 11. 28.
     * @version 1.0.0
     -->
    <select id="hasLike" resultType="boolean" parameterType="com.dita.metapilot.comment.dto.LikeDto">
        select count(*) > 0
        from comment_like_tbl
        where comment_tbl_id = #{commentId} and user_tbl_id = #{userId}
    </select>


</mapper>
