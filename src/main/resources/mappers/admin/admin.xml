<?xml version="1.0" encoding="UTF-8" ?>
<!--
    Mybatis mapper XML for user who has permit the administrator privilege.

    @author: Kiseok Kang (@jUqItEr)
    @filename: admin.xml
    @since: 2023. 11. 28.
    @version: 1.0.0
-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dita.metapilot.admin.repository.AdminRepository">
    <resultMap id="categoryEntity" type="com.dita.metapilot.admin.entity.CategoryEntity">
        <result property="id" column="id"></result>
        <result property="categoryTblRefId" column="category_tbl_ref_id"></result>
        <result property="subject" column="subject"></result>
        <result property="depth" column="depth"></result>
        <result property="pos" column="pos"></result>
        <result property="type" column="type"></result>
        <result property="fold" column="fold"></result>
        <result property="visible" column="visible"></result>
        <result property="countVisible" column="count_visible"></result>
        <result property="listVisible" column="list_visible"></result>
        <result property="listCount" column="list_count"></result>
        <result property="createdAt" column="created_at"></result>
    </resultMap>

    <resultMap id="postEntity" type="com.dita.metapilot.admin.entity.PostEntity">
        <result property="id" column="id"></result>
        <result property="categoryTblId" column="category_tbl_ref_id"></result>
        <result property="userTblId" column="user_tbl_id"></result>
        <result property="subject" column="subject"></result>
        <result property="content" column="content"></result>
        <result property="count" column="count"></result>
        <result property="notice" column="notice"></result>
        <result property="deleted" column="deleted"></result>
        <result property="type" column="type"></result>
        <result property="createdAt" column="created_at"></result>
    </resultMap>

    <resultMap id="commentEntity" type="com.dita.metapilot.admin.entity.CommentEntity">
        <result property="id" column="id"></result>
        <result property="postTblId" column="post_tbl_id"></result>
        <result property="commentTblRefId" column="comment_tbl_ref_id"></result>
        <result property="commentTblRootId" column="comment_tbl_root_id"></result>
        <result property="userTblId" column="user_tbl_id"></result>
        <result property="content" column="content"></result>
        <result property="depth" column="depth"></result>
        <result property="pos" column="pos"></result>
        <result property="visible" column="visible"></result>
        <result property="createdAt" column="created_at"></result>
    </resultMap>

    <!-- Block User. -->
    <insert id="blockUser" parameterType="com.dita.metapilot.admin.dto.UserDto">
        <![CDATA[
            insert into
                block_tbl
            values (
                null, ${userId}
            )
        ]]>
    </insert>

    <!-- 카테고리 목록 list -->
    <select id="categoryView" resultMap="categoryEntity">
        select
        id, category_tbl_ref_id, subject, depth, pos, type, visible, fold, count_visible, list_visible, list_count, created_at
        from
        category_tbl
        order by
        pos asc
    </select>

    <!-- 삭제된 게시글 목록 list -->
    <select id="postDeletedView" resultMap="postEntity">
        <![CDATA[
            set @userId = #{userTblId};

            select id, category_tbl_id, user_tbl_id, subject, content, count, notice, deleted, type, created_at
            from post_tbl
            where user_tbl_id = @userId and deleted = 1
            order by created_at desc;
        ]]>
    </select>

    <!-- 댓글 list -->
    <select id="commentView" resultMap="commentEntity">
        <![CDATA[
            set @id = #{id};

            select id, post_tbl_id, comment_tbl_ref_id, comment_tbl_root_id, user_tbl_id, content, depth, pos, visible, created_at
            from comment_tbl
            where id = @id
            order by created_at desc;
        ]]>
    </select>

    <!-- 카테고리 생성 -->
    <insert id="createCategory" parameterType="com.dita.metapilot.admin.dto.CategoryDto">
        <!--<![CDATA[
            set @id = #{id};
            set @inputType = #{type};
            set @maxPos = if(@id=1, (SELECT COALESCE(MAX(pos), 0) FROM category_tbl)
            ,(SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @id));
            set @refId = (SELECT category_tbl_ref_id FROM category_tbl where id = @id);
            set @type = (SELECT type FROM category_tbl where id = @id);
            set @depth = (SELECT depth FROM category_tbl where id = @id);

            set @gain = if(@depth = 1, 0, 1);
            set @setDepth = if(@id = 1 or @refId = 1, 0, 1);

            set @maxPos = if(@type = 0, (SELECT pos from category_tbl where id = @id), @maxPos);

            update category_tbl
            set pos = pos + @gain
            where (pos > @maxPos);

            set @refId = if(@type = 0, @refId, @id);
            set @setDepth = if(@refId = 1, 0, 1);
            set @type = @inputType;

            insert into category_tbl
            select null, @refId, #{subject}, @setDepth, @maxPos+1, @type, #{visible}, #{fold}, #{countVisible}, #{listVisible}, #{listCount}, now()
            where @depth !=1;
        ]]>-->
        <![CDATA[
            set @id = #{id};
            set @refId = if(@id = 1, 1, (select category_tbl_ref_id from category_tbl where id = @id));
            set @pos = (select pos from category_tbl where id = @id);
            set @depth = (select depth from category_tbl where id = @id);
            set @setPos = (SELECT COALESCE(MAX(pos), 0) FROM category_tbl) + 1;

            set @logic = if(@id = 1, 1, 0);
            set @logic = if(@id != 1 and @depth = 0, 2, @logic);
            set @logic = if(@depth = 1, 3, @logic);

            set @refId = if(@logic = 2, @id, @refId);
            set @setDepth = if(@id = 1, 0, 1);

            set @setPos = if(@logic = 2, (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @id) + 1, @setPos);
            set @setPos = if(@logic = 3, @pos + 1, @setPos);

            update category_tbl
            set pos = if(@depth != 1, pos + 1, pos)
            where pos >= @setPos;

            insert into category_tbl
            select null, @refId, #{subject}, @setDepth, @setPos, #{type}, #{visible}, #{fold}, #{countVisible}, #{listVisible}, 0, now()
            where @depth !=1;
        ]]>
    </insert>

    <!-- 카테고리 구분선 생성 -->
    <insert id="createCategoryLine" parameterType="com.dita.metapilot.admin.dto.CategoryDto">
        <!--<![CDATA[
            set @id = #{id};
            set @refId = if(@id = 1, 1, (select category_tbl_ref_id from category_tbl where id = @id));
            set @depth = (select depth from category_tbl where id = @id);
            set @maxPos = if(@id = 1, (SELECT COALESCE(MAX(pos), 0) FROM category_tbl), (select pos from category_tbl where id = @id));

            set @setDepth = if(@id != 1 and @depth = 0, 1, @depth);
            set @refId = if(@id != 1 and @depth = 0, @id, @refId);
            set @maxPos = if(@id != 1 and @depth = 0, (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @id), @maxPos);

            select subject, @id, @refId, @depth, @setDepth, @maxPos
            from category_tbl
            where id = @id;

            update category_tbl
            set pos = pos + 1
            where (pos > @maxPos);

            insert into category_tbl
            select null, @refId, '-&#45;&#45;&#45;&#45;', @setDepth, @maxPos+1, 0, 0, 0, 0, 0, 0, now();
        ]]>-->
        <![CDATA[
            set @id = #{id};
            set @refId = if(@id = 1, 1, (select category_tbl_ref_id from category_tbl where id = @id));
            set @pos = (select pos from category_tbl where id = @id);
            set @depth = (select depth from category_tbl where id = @id);
            set @setPos = (SELECT COALESCE(MAX(pos), 0) FROM category_tbl) + 1;

            set @logic = if(@id = 1, 1, 0);
            set @logic = if(@id != 1 and @depth = 0, 2, @logic);
            set @logic = if(@depth = 1, 3, @logic);

            set @refId = if(@logic = 2, @id, @refId);
            set @setDepth = if(@id = 1, 0, 1);

            set @setPos = if(@logic = 2, (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @id) + 1, @setPos);
            set @setPos = if(@logic = 3, @pos + 1, @setPos);

            update category_tbl
            set pos = pos + 1
            where pos >= @setPos;

            insert into category_tbl
            select null, @refId, '-----', @setDepth, @setPos, 0, 0, 0, 0, 0, 0, now();
        ]]>
    </insert>

    <!-- 카테고리 삭제 -->
    <delete id="deleteCategory" parameterType="com.dita.metapilot.admin.dto.CategoryDto">
        <![CDATA[
            set @id = #{id};

            set @depth = (select depth from category_tbl where id = @id);
            set @type = (select type from category_tbl where id = @id);
            set @pos = (select pos from category_tbl where id = @id);
            set @bottomPos = (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @id);

            set @logic = if(@depth = 0 and @bottomPos != 0, 1, 0);

            UPDATE category_tbl
            SET pos = pos - 1
            WHERE pos > @pos;

            DELETE FROM category_tbl
            WHERE id = @id;

            update category_tbl
            set depth = if(@logic = 1, 0, depth)
            where category_tbl_ref_id = @id;

            update category_tbl
            set category_tbl_ref_id = if(@logic = 1, 1, category_tbl_ref_id)
            where category_tbl_ref_id = @id;
        ]]>
    </delete>

    <!-- 부모 카테고리와 해당 카테고리의 자식들까지 전부 삭제 -->
    <delete id="deleteCategoryRef" parameterType="com.dita.metapilot.admin.dto.CategoryDto">
        <![CDATA[
            set @id = #{id};

            set @depth = (select depth from category_tbl where id = @id);
            set @type = (select type from category_tbl where id = @id);
            set @pos = (select pos from category_tbl where id = @id);
            set @bottomPos = (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @id);

            set @changePos = (select pos
            from (select * from category_tbl where category_tbl_ref_id = 1) as t
            where pos > @pos
            order by pos
            limit 1);

            set @difPos = @changePos - @pos;

            delete from category_tbl
            where pos >= @pos and pos <= 8;

            update category_tbl
            set pos = pos - @difPos
            where pos > @pos;
        ]]>
    </delete>

    <!-- Delete comment. -->
    <delete id="deleteComment" parameterType="com.dita.metapilot.admin.dto.CommentDto">
        <![CDATA[
            delete from
                comment_tbl
            where
                id = ${id}
        ]]>
    </delete>

    <!-- Delete post with post id. -->
    <delete id="deletePost" parameterType="com.dita.metapilot.admin.dto.PostDto">
        <![CDATA[
            delete from
                post_tbl
            where
                id = ${id}
        ]]>
    </delete>

    <!-- 카테고리 수정 -->
    <update id="updateCategory" parameterType="com.dita.metapilot.admin.dto.CategoryDto">
        update
            category_tbl
        set
            subject = #{subject},
            category_tbl_ref_id = #{categoryTblRefId},
            pos = #{pos},
            type = #{type},
            visible = #{visible},
            count_visible = #{countVisible}
        where
            id = #{id}
    </update>

    <!-- 선택한 카테고리 한 칸 올리기 -->
    <update id="updateCategoryUp" parameterType="com.dita.metapilot.admin.dto.CategoryDto">
        <![CDATA[
            set @id = #{id};
            set @refId = (select category_tbl_ref_id from category_tbl where id = @id);
            set @pos = (select pos from category_tbl where id = @id);
            set @depth = (select depth from category_tbl where id = @id);

            set @topPos = (SELECT COALESCE(MIN(pos), 0) FROM category_tbl where category_tbl_ref_id = @id);
            set @bottomPos = (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @id);

            set @changePos = (select pos
            from (select * from category_tbl where category_tbl_ref_id = 1) as t
            where pos < @pos
            order by pos DESC
            limit 1);

            set @difPos = @pos - @changePos;

            set @changeId = (select id
            from (select * from category_tbl where category_tbl_ref_id = 1) as t
            where pos < @pos
            order by pos DESC
            limit 1);

            set @topPos2 = (SELECT COALESCE(MIN(pos), 0) FROM category_tbl where category_tbl_ref_id = @changeId);
            set @bottomPos2 = (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @changeId);

            set @logic = if(@pos = 2, 1, 0);
            set @logic = if(@depth = 0 and @topPos = 0 and @topPos2 = 0, 2, @logic);
            set @logic = if(@depth = 0 and @topPos != 0 and @topPos2 = 0 and @pos != 2, 3, @logic);
            set @logic = if(@depth = 0 and @topPos != 0 and @topPos2 != 0, 4, @logic);
            set @logic = if(@depth = 0 and @topPos = 0 and @topPos2 != 0, 5, @logic);
            set @logic = if(@depth = 1 and @difPos = 1, 6, @logic);
            set @logic = if(@depth = 1 and @difPos != 1, 7, @logic);

            update category_tbl
            set pos = if(@logic = 7, pos + 1, pos)
            where pos = @pos - 1;

            update category_tbl
            set pos = if(@logic = 7, pos - 1, pos)
            where id = @id;

            update category_tbl
            set pos = if(@logic = 6, @changePos, pos)
            where id = @id;

            update category_tbl
            set category_tbl_ref_id = if(@logic = 6, 1, category_tbl_ref_id)
            where id = @id;

            update category_tbl
            set depth = if(@logic = 6, 0, depth)
            where id = @id;

            update category_tbl
            set pos = if(@logic = 6, @pos, pos)
            where id = @changeId;

            update category_tbl
            set category_tbl_ref_id = if(@logic = 5, @changeId, category_tbl_ref_id)
            where id = @id;

            update category_tbl
            set depth = if(@logic = 5, 1, depth)
            where id = @id;

            update category_tbl
            set pos = if(@logic = 4, pos + @difPos + 100, pos)
            where pos >= @changePos and pos <= @bottomPos2;

            update category_tbl
            set pos = if(@logic = 4, pos - @difPos, pos)
            where pos >= @pos and pos <= @bottomPos;

            update category_tbl
            set pos = if(@logic = 4, pos - 100, pos)
            where pos > 100;

            update category_tbl
            set pos = if(@logic = 3, pos - 1, pos)
            where pos >= @pos and pos <= @bottomPos;

            update category_tbl
            set pos = if(@logic = 3, @bottomPos, pos)
            where id = @changeId;

            update category_tbl
            set pos = if(@logic = 2, pos - 1, pos)
            where id = @id;

            update category_tbl
            set pos = if(@logic = 2, @pos, pos)
            where id = @changeId;
        ]]>
    </update>

    <!-- 선택한 카테고리 한 칸 내리기 -->
    <update id="updateCategoryDown" parameterType="com.dita.metapilot.admin.dto.CategoryDto">
        <![CDATA[
            set @id = #{id};
            set @refId = (select category_tbl_ref_id from category_tbl where id = @id);
            set @pos = (select pos from category_tbl where id = @id);
            set @depth = (select depth from category_tbl where id = @id);

            set @topPos = (SELECT COALESCE(MIN(pos), 0) FROM category_tbl where category_tbl_ref_id = @id);
            set @bottomPos = (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @id);

            set @changePos = (select pos
            from (select * from category_tbl where category_tbl_ref_id = 1) as t
            where pos > @pos
            order by pos
            limit 1);

            set @difPos = @changePos - @pos;

            set @changeId = (select id
            from (select * from category_tbl where category_tbl_ref_id = 1) as t
            where pos > @pos
            order by pos
            limit 1);

            set @topPos2 = (SELECT COALESCE(MIN(pos), 0) FROM category_tbl where category_tbl_ref_id = @changeId);
            set @bottomPos2 = (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where category_tbl_ref_id = @changeId);

            set @lastPos = if(@depth = 0, (SELECT COALESCE(MAX(pos), 0) FROM category_tbl where depth = 0)
            , (SELECT COALESCE(MAX(pos), 0) FROM category_tbl));

            set @logic = if(@pos = @lastPos, 1, 0);
            set @logic = if(@depth = 0 and @topPos = 0 and @topPos2 = 0 and @pos != @lastPos, 2, @logic);
            set @logic = if(@depth = 0 and @topPos != 0 and @topPos2 = 0 and @pos != @lastPos, 3, @logic);
            set @logic = if(@depth = 0 and @topPos != 0 and @topPos2 != 0, 4, @logic);
            set @logic = if(@depth = 0 and @topPos = 0 and @topPos2 != 0, 5, @logic);
            set @logic = if(@depth = 1 and @difPos != 1, 7, @logic);
            set @logic = if(@depth = 1 and (@difPos = 1 or @pos = @lastPos), 6, @logic);

            update category_tbl
            set category_tbl_ref_id = if(@logic = 6, 1, category_tbl_ref_id)
            where id = @id;

            update category_tbl
            set depth = if(@logic = 6, 0, depth)
            where id = @id;

            update category_tbl
            set pos = if(@logic = 7, pos - 1, pos)
            where pos = @pos + 1;

            update category_tbl
            set pos = if(@logic = 7, pos + 1, pos)
            where id = @id;

            update category_tbl
            set category_tbl_ref_id = if(@logic = 5, @changeId, category_tbl_ref_id)
            where id = @id;

            update category_tbl
            set depth = if(@logic = 5, 1, depth)
            where id = @id;

            update category_tbl
            set pos = if(@logic = 5, pos + 1, pos)
            where id = @id;

            update category_tbl
            set pos = if(@logic = 5, pos - 1, pos)
            where id = @changeId;

            update category_tbl
            set pos = if(@logic = 4, pos + 100 - @difPos, pos)
            where pos >= @changePos and pos <= @bottomPos2;

            update category_tbl
            set pos = if(@logic = 4, pos + @difPos, pos)
            where pos >= @pos and pos <= @bottomPos;

            update category_tbl
            set pos = if(@logic = 4, pos - 100, pos)
            where pos > 100;

            update category_tbl
            set pos = if(@logic = 3, pos + 1, pos)
            where pos >= @pos and pos <= @bottomPos;

            update category_tbl
            set pos = if(@logic = 3, @pos, pos)
            where id = @changeId;

            update category_tbl
            set pos = if(@logic = 2, pos + 1, pos)
            where id = @id;

            update category_tbl
            set pos = if(@logic = 2, @pos, pos)
            where id = @changeId;
        ]]>
    </update>

    <!-- 카테고리 헤더 list -->
    <select id="categoryHeader" resultMap="categoryEntity">
        <![CDATA[
            SELECT id, subject
            from category_tbl
            where `type` & 8 > 0
        ]]>
    </select>
</mapper>